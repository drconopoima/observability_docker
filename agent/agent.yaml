server:
  log_level: debug
  log_format: logfmt

metrics:
  global:
    scrape_interval: 5s
    external_labels:
      cluster: test
      namespace: monitoring
    remote_write:
      - url: http://nginx:3702/api/v1/push
        send_exemplars: true
        # Add X-Scope-OrgID header so that Mimir knows what tenant the remote write data should be stored in.
        # In this case, our tenant is "backend"
        headers:
          X-Scope-OrgID: backend
  wal_directory: "/tmp/agent/prom"
  configs:
    - name: "backend-metrics"
      scrape_configs:
        - job_name: "backend_fastapi"
          static_configs:
          - targets: ['backend:5050']
    # - name: "myapp-metrics"
    #   scrape_configs:
    #     - job_name: "backend_flask"
    #       static_configs:
    #       - targets: ['api:8000']

logs:
  configs:
    - name: "backend-logs"
      clients:
        - url: http://nginx:3502/loki/api/v1/push
      positions: 
        filename: "/tmp/agent/loki.yaml"
      scrape_configs:
      # This value should be a problem --> https://github.com/grafana/loki/issues/7275
        - job_name: "backend_fastapi"
          loki_push_api:
            server:
              http_listen_port: 3501
            labels:
              agent_from: grafana_agent

traces:
  configs:
  - name: "backend-traces"
    attributes:
      actions:
        - action: insert
          key: tempo.attribute.labels
          value: "backend_fastapi"
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:3601
    remote_write:
      - endpoint: http://nginx:3602
        insecure: true
        protocol: http
    automatic_logging:
      backend: "stdout"
      spans: true
