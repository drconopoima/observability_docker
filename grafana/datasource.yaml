# Define datasource
apiVersion: 1

datasources:
  # Mimir datasource to get metrics
  - uid: mimir
    name: mimir
    type: prometheus
    editable: true
    is_default: true
    access: proxy
    url: http://nginx:4702/prometheus
    jsonData:
      httpMethod: POST
      httpHeaderName1: 'X-Scope-OrgID'
      alertmanagerUid: 'alertmanager'
      exemplarTraceIdDestinations:
        - datasourceUid: tempo
          name: TraceID
    secureJsonData:
      httpHeaderValue1: 'backend'
  
  # - name: Mimir Alertmanager
  #   uid: alertmanager
  #   type: alertmanager
  #   access: proxy
  #   orgId: 1
  #   url: http://nginx:9009/
  #   version: 1
  #   editable: true
  #   jsonData:
  #     httpHeaderName1: 'X-Scope-OrgID'
  #     implementation: 'cortex'
  #   secureJsonData:
  #     httpHeaderValue1: 'demo'
  
  # Loki datasource to get logs
  - uid: loki
    name: Loki
    type: loki
    editable: true
    is_default: true
    access: proxy
    url: http://nginx:4502
    jsonData:
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: (?:trace_id)=(\w+)
          name: TraceID
          url: $${__value.raw}
  
  # Tempo datasource to get traces
  - uid: tempo
    name: Tempo
    type: tempo
    editable: true
    is_default: true
    access: proxy
    url: http://nginx:4602
    jsonData:
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: loki
      tracesToLogs:
        datasourceUid: loki
        filterBySpanID: false
        filterByTraceID: true
        mapTagNamesEnabled: false